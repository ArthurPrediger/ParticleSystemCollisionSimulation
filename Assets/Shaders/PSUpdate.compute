// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel PSUpdate

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<float3> particlesPos;
float aliveTime;
float deltaTime;

[numthreads(1,1,1)]
void PSUpdate (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    float3 vel = float3(0.0, 1.0, 0.0);
    float lifeTime = 2.0;

    if(aliveTime < lifeTime)
    {
        particlesPos[id.x] += vel * deltaTime;
    }
    else
    {
        particlesPos[id.x] += vel * (lifeTime - (aliveTime - deltaTime));
        particlesPos[id.x] -= vel * lifeTime;
    }
}
